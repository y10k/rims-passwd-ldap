# -*- coding: utf-8 -*-

require 'net/ldap'
require 'pp'
require 'yaml'

DOCKER_CMD = ENV['DOCKER'] || 'docker.io'

IMAGE_REPOSITORY = 'toki/rims-slapd'
IMAGE_TAG = 'v1.4'

NAME = ENV['NAME'] || 'rims-slapd'
AUTH = YAML.load_file(File.join(File.dirname(__FILE__), 'build', 'auth.yml'))

def docker(*args)
  sh DOCKER_CMD, *args
end

desc 'all setup'
task :setup => [ :build, :run ]

desc 'all destroy'
task :destroy => [ :stop, :rm, :rmi ]

desc 'build image'
task :build do
  docker 'build', '-t', "#{IMAGE_REPOSITORY}:#{IMAGE_TAG}", 'build'
end

desc 'remove image'
task :rmi do
  docker 'rmi', "#{IMAGE_REPOSITORY}:#{IMAGE_TAG}"
end

desc 'run new container'
task :run do
  docker 'run', "--name=#{NAME}", '-itd', '-p', "#{AUTH['port']}:389", "#{IMAGE_REPOSITORY}:#{IMAGE_TAG}"
end

desc 'start container'
task :start do
  docker 'start', NAME
end

desc 'stop container'
task :stop do
  docker 'stop', NAME
end

desc 'remove container'
task :rm do
  docker 'rm', NAME
end

def ldap_open
  Net::LDAP.open(host: 'localhost',
                 port: AUTH['port'],
                 auth: {
                   method: :simple,
                   username: 'cn=admin,dc=nodomain',
                   password: AUTH['pass']
                 }) {|ldap|
    yield(ldap)
  }
end

desc 'dump dit'
task :dump_dit do
  ldap_open{|ldap|
    pp ldap.search(base: 'dc=nodomain')
  }
end

# Local Variables:
# mode: Ruby
# indent-tabs-mode: nil
# End:
